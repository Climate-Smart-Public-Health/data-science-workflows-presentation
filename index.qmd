---
title: "Reproducible Data Science Workflows in Climate-Smart Public Health Research<br>üåçü§ñüìä"
subtitle: "A practical guide for students"
author: "Tinashe M. Tapera, Research Software Engineer"
date: 2025-06-24
format: 
  nes-revealjs:
    theme:
      - default
      - styles.scss
    incremental: true
    preview-links: true
    reference-location: document
transition: fade
execute: 
  eval: false

title-slide-attributes:
  data-background-image: https://e1.pngegg.com/pngimages/905/302/png-clipart-the-ultimate-patrick-star-thumbnail.png
  data-background-size: 10%
  data-background-position: 95% 90%
  data-background-opacity: "1"

filters:
   - include-code-files
---

## Welcome üëã {.smaller}

### Why we're here

![](https://miro.medium.com/v2/resize:fit:908/1*AHK97CDrTLbTOE4qVYBtnQ.jpeg)^[https://www.nature.com/articles/533452a]

- Guide you to [sustainable]{.blue}, [reproducible]{.blue}, and [collaborative]{.blue} data science workflows.
- Orient you to cluster computing using [Harvard FASRC]{.blue}, not your laptop.
- Introduce principles and tools that help you [focus on science, not logistics]{.blue}.

---

## Meet Squidward... {.smaller}

![Day 1 of grad school vs. Day ???](https://media.tenor.com/E_u05b8JH3AAAAAM/mundane-spongebob.gif)

- Squidward is a graduate student who is excited to do the science
- Eventually, Squidward becomes tired, overworked, demotivated, and hungry
- Squidward's [work quality suffers as he gets overwhelmed]{.dark-red} by grad school and [he starts to take shortcuts]{.dark-red}
  - Not documenting his work
  - Manually moving files
  - Hard-coding programming loops/recursion
  - Running long code on a slow laptop
  - Arbitrarily naming files and versions

---


::: {.columns}
::: {.column width="50%"}

### Fragile Workflows ‚õìÔ∏è:
- Stored only on personal machines
- Manual file movements (click-and-drag)  
- Impossible to reproduce or share 
- Outputs treated as "truth"

:::

::: {.column width="50%"}

### Robust Workflows üîó:
- Portable across systems and environments
- Can be automated
- Replicable & reproducible
- Source of truth is ["how", not "what"]{.yellow}

:::
:::

- Robust workflows make [doing the right thing the easy thing]{.yellow}

---

## Where is the source of truth? üßê

![](./figs/paper_title.png)^[https://www.mdpi.com/2072-4292/17/9/1482]


::: {.columns}
::: {.column width="50%"}
- Claim: title
- Evidence: data
- Truth: [methods]{.yellow}
:::

::: {.column width="50%"}
- ![](./figs/paper_methods.png)
:::
:::

---

## Proposing A Data Science Philosophy üí¨ {.smaller}

- Prefer [remote + reproducible]{.dark-green} over [local + manual]{.dark-red}
- [Code]{.dark-green}, [not outputs]{.dark-red}, should be the [source of truth]{.dark-green}
- Narrate your thinking with [notebooks]{.dark-green}
- Track your work with [Git]{.dark-green}
- [Save on technical debt]{.dark-green} by investing in robust systems
- ![](https://libapps.s3.amazonaws.com/accounts/310452/images/FAIR_data_principles.jpg)^[https://www.nature.com/articles/sdata201618]


---

## What We'll Cover Today üìã {.smaller}

| Principle          | Tool                                  | What You'll Learn                              | |
|--------------------|----------------------------------------|------------------------------------------------|---|
| **Efficiency**      | FASRC                                 | Remote computing     | <i class="nes-icon star is-small"></i> |
| **Transparency**    | Notebooks       | Narrated and reproducible scientific analysis   | <i class="nes-icon star is-small"></i> |
| **Modularity**      | `here()` + `renv`                     | Robust file paths & environment isolation   | <i class="nes-icon star is-small"></i> |
| **Traceability**    | Git + GitHub                          | Version control and team collaboration    | <i class="nes-icon star is-small"></i> |
| **Flexibility**      | `googledrive` + `pins`                | Reproducible I/O with shared cloud data     | <i class="nes-icon star is-small"></i> |


---

# <i class="nes-icon like is-medium"></i> Let's walkthrough the research process together...<i class="nes-icon like is-medium"></i>


All screenshots and examples are in the google drive folder:
`Climate-Smart-Public-Health/Lab Organization/Meetings & Communications/2024-2025/20250624_Tinashe_DataScienceWorkflows/Screenshots_Examples`

https://drive.google.com/drive/folders/11wpDo_sJ434pPAh8maXA6TbOSke6WHZE?usp=sharing

Check your email!

---

## {background-image="./figs/firstday.png"}

---

## FASRC: Logging In & Launching RStudio üöÄ

0. Get on the VPN
1. Go to the Open OnDemand site [https://rcood.rc.fas.harvard.edu](https://rcood.rc.fas.harvard.edu)
2. Log in with FASRC Account details
3. Launch a **RStudio Server** session
4. Create and save an R file (You can also download the example file 1_FASRC_step4_example.r)


---

## {background-image="https://media1.tenor.com/m/E2CbHRInEb4AAAAC/spongebob-speech.gif"}

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}
> [<i class="nes-icon trophy is-largs"></i> Your work is now on a backed-up, high-performance server.]{.red}
:::

---

## {background-image="https://preview.redd.it/8jwzztybumg71.jpg?width=1080&crop=smart&auto=webp&s=9bc458daf052cb209db9ab50b3558ef7082ee49d"}

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}
> [OH NO‚ÄºÔ∏è MY INTERNET WENT DOWN/FIREFOX CRASHED/MY LAPTOP WAS EATEN BY NEMATOADS ‚ÄºÔ∏è]{.yellow}
:::

---

## Workflow Benefit #1: Efficiency with High Performance Compute Clusters<i class="nes-icon star is-medium"></i> <i class="nes-icon star is-empty is-small"></i> <i class="nes-icon star is-empty is-small"></i> <i class="nes-icon star is-empty is-small"></i> <i class="nes-icon star is-empty is-small"></i> {.smaller background-image="https://media.tenor.com/PkFTmY4Ac4MAAAAM/spongebob-squarepants.gif" background-position="95% 90%" background-size="20%"}

> [FASRC is a high performance computing resource whose professional responsibility is to save you (and your data) from yourself ^[https://www.rc.fas.harvard.edu/cluster/publications/] ^[https://docs.rc.fas.harvard.edu]]{.yellow style="background: rgba(0, 0, 0, 0.7)"}

- OpenOnDemand [sessions persist]{.green} as long as the job is specified
- File permissions mechanisms are [specific and deliberate]{.green}
- Software will [(likely) never crash]{.red} due to a mistake on your part
- You will [(likely) never break]{.red} FASRC

---

## {background-image="https://i.ytimg.com/vi/C3u-Mz8-dhQ/maxresdefault.jpg?sqp=-oaymwEmCIAKENAF8quKqQMa8AEB-AH-CYAC0AWKAgwIABABGH8gFygXMA8=&rs=AOn4CLCRDr5lXEtFixn4GXSob5bMlHoeiA"}

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}
> [Let's go back to our work from yesterday... wait, what was I doing again...?]{.yellow}
:::

---

## {background-image="https://i.imgflip.com/2uz7w6.png?a486048" background-position="20% 50%" background-size="60%"}

::: {.columns}
::: {.column width="50%"}
:::

::: {.column width="50%"}
:::{.fragment}

```{.r include="figs/_example.r"}
```

:::

:::{.fragment}

```{.markdown include="figs/_example.qmd"}
```

:::
:::
:::

---

### Literate Programming with Notebooks üñºÔ∏è

0. Reopen RStudio session
1. Convert your RScript to a notebook
2. Add a YAML header to title, date, and sign your notebook
3. Add a story to your script to explain what you're doing (Or download and add `2_LiterateProgramming_step1_example2.qmd` to your project)

---

## Literate Programming with NotebooksüñºÔ∏è

> "üí°Documentation is like a love letter you write to your future self" (Damien Conway) ^[https://www.azquotes.com/quote/1463174]



- (Knuth, 1984 ^[https://www.cs.tufts.edu/~nr/cs257/archive/literate-programming/01-knuth-lp.pdf]) Literate programming is the [intertwining of written and machine language to self-document and explain code.]{.blue}

- A program's source code is made primarily to be [read and understood by other people]{.blue}, and secondarily to be executed by the computer.

- In data science, we use notebook tools like [Quarto, RMarkdown, or JuPyter]{.blue} to combine [narrative, code, and outputs]{.blue}

---

## Workflow Benefit #2: Transparency with Notebooks ^[https://www.nature.com/articles/d41586-018-07196-1] <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-empty is-small"></i> <i class="nes-icon star is-empty is-small"></i> <i class="nes-icon star is-empty is-small"></i>
::: {.columns}
::: {.column width="50%"}
![](/figs/example_rendered.png)
:::

::: {.column width="50%"}

- Notebooks provide [narrative context]{.dark-green}, [code]{.dark-green}, and [outputs]{.dark-green} in one place
- Enable others (and your future self) to [understand and reproduce]{.dark-green} your work
- Great for [supervisor meetings]{.dark-green}, [review]{.dark-green}, and [sharing]{.dark-green}
- Encourage ["writing as thinking"]{.blue}

:::
:::

---

## Notebooks aren't just for code outputs... {background-image="https://media1.tenor.com/m/iI-3M1SYPlwAAAAd/sponge-bob-wow.gif" background-position="50% 70%" background-size="15%"}

::: {.fragment style="position: absolute; top: 15%; left: 5%; width: 20%;"}
![Reports in pdf, word, and html](https://datascience.arizona.edu/sites/default/files/styles/az_large/public/2022-08/horst_quarto_schematic.png.webp?itok=KtFxH5hY)
:::

::: {.fragment style="position: absolute; top: 10%; left: 60%; width: 25%;"}
![Dashboards for data analysis](https://quarto.org/docs/dashboards/examples/thumbnails/penguins-dashboard.png)
:::

::: {.fragment style="position: absolute; top: 75%; left: 70%; width: 20%;"}
![More dashboards](https://quarto.org/docs/interactive/shiny/images/iris-k-means.png)
:::

::: {.fragment style="position: absolute; top: 35%; left: 85%; width: 18%;"}
![Even more dashboards](https://shiny.posit.co/py/docs/assets/tipping-dashboard.png)
:::

::: {.fragment style="position: absolute; top: 40%; left: 2%; width: 20%;"}
![Interactive maps](https://quarto.org/docs/interactive/images/article-input-panel-columns.png)
:::

::: {.fragment style="position: absolute; top: 30%; left: 37%; width: 20%;"}
![Blogs](https://www.crumplab.com/blog/post_886_10_14_22_quartoProjects/images/Screen%20Shot%202022-10-14%20at%202.40.43%20PM.png)
:::

::: {.fragment style="position: absolute; top: 30%; left: 15%; width: 25%;"}
![Organizational websites](https://openscapes.org/blog/2023-08-03-openscapes-website/media/old_site.png)
:::

::: {.fragment style="position: absolute; top: 70%; left: 10%; width: 15%;"}
![Books](https://r4ds.hadley.nz/cover.jpg)
:::

::: {.fragment style="position: absolute; top: 65%; left: 30%; width: 40%;"}
![More books](https://quarto.org/docs/gallery/books/geocompy.png)
:::

::: {.fragment style="position: absolute; top: 5%; left: 40%; width: 20%;"}
![Manuscripts!](https://i.ytimg.com/vi/NK1onTLcgY4/maxresdefault.jpg)
:::

::: {.fragment style="position: absolute; top: 50%; left: 38%; width: 40%;"}
![A manuscrupt I've contributed to/authored](figs/_notebook_paper.png)
:::

::: {.fragment style="position: absolute; top: 40%; left: 50%; transform: translate(-50%, -50%); font-size: 3rem; font-weight: bold; background: rgba(0, 0, 0, 0.7); color: #FFD700; padding: 1rem 2rem; border-radius: 10px; z-index: 1000; text-align: center;"}
ü§Øü§Øü§Ø 

THIS PRESENTATION IS A NOTEBOOK 
:::

---

## {background-image="https://s1.dmcdn.net/v/BVezE1Lza7MnyfFWl/x1080"}

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}
> [Your lab mate is not convinced that lm() and glm() are equivalent in `R`,
so you decide to demo it and share your notebook with them...]{.dark-blue}
:::

---

## Modularity in Data Science üóÉÔ∏è

0. Open your analysis notebook
1. Read data from an external URL
2. Show that the two regression functions are equivalent
3. Share the notebook so that they can try it for themselves (Download and and add `3_Modularity_step1_example3.qmd` to your project and try to run it)

---

::: {.columns}
::: {.column style="align: center; position: absolute; top: 25%; left: 0%"}
![Your code](https://i0.wp.com/img1.joyreactor.com/pics/post/sponge-bob-sculpture-gif-208319.gif)
:::

::: {.column style="align: center; position: absolute; top: 5%; left: 50%"}
::: {.fragment}
![](https://forum.posit.co/uploads/default/optimized/3X/a/a/aa9ddc9e0f807cd494960f21dad04976d507ed5e_2_1024x448.png)

![them running your code](https://i.makeagif.com/media/6-27-2019/pyAFCj.gif)
:::
:::
:::

---

## Organize Projects with `here()`, `config`s, and `renv` {.smaller}

::: {.columns}

::: {.column width="50%"}

![](https://i2.wp.com/cdn-images-1.medium.com/max/786/1*fmEQAQ7H_cqAzwOPCIhv8w.png?w=584&ssl=1)

- Use `here::here()` instead of `"../"` or `"~/Downloads/"`

::: {.fragment}
```r
library(here)
here("data", "input.csv")
```
:::
:::
::: {.column width="50%"}
  
- Use `config`s to manage paths outside of the project
- Keeps paths [portable]{.dark-green} and [self-documenting]{.dark-green}
- Helps build & maintain [structured]{.blue} projects

::: {.fragment}
```yaml

default:
  data_dir: "/nfs/shared/data"
  results_dir: "/nfs/shared/results"
  madagascar:
      shapefile: "https://data.humdata.org/dataset/26fa506b-0727-4d9d-a590-d2abee21ee22/resource/ed94d52e-349e-41be-80cb-62dc0435bd34/download/mdg_adm_bngrc_ocha_20181031_shp.zip"
```
:::

- Use `renv` and/or `conda` to manage packages
- Allows you to [document exact package versions and dependencies]{.dark-green} for each project
- Stores package metadata in a text file that can be [version controlled and shared]{.dark-green} with your project

:::
:::

---

## Workflow Benefit #3: Modularity with path & package managers ^[https://www.mdpi.com/2624-5175/6/1/1] ^[https://link.springer.com/article/10.3758/s13428-020-01436-x]<i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-empty is-small"></i> <i class="nes-icon star is-empty is-small"></i> {.smaller background-image="https://i.pinimg.com/474x/0b/f8/26/0bf8260956a55039f792eb382228991a.jpg" background-size="15%" background-position="80% 90%"}

- üëØ [Collaboration]{.dark-green}: Modular code is easier for teams to understand, reuse, and extend.
- How can you make your code more modular?
  - üß≠ Portability of [location]{.blue}: Use tools like `here()` to manage file and document paths 
  - üèó Portability of [dependencies]{.blue} Use tools like `renv` or `conda` to manage package dependencies
  - üéÅ Portability of [code components]{.blue}: Use functions and modules so that code can be reused and tested independently
- üìà [Scalability]{.dark-green}: Modular workflows adapt easily to new data, collaborators, or computing environments.


---

## {background-image="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSHekKrZLguVOYXueX0CyhyLvNXmyB8V87CA87_RTwQGDc9SKmgi6hYq9JoCSMum8a0umw&usqp=CAU"}

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}

> It's time to publish your groundbreaking paper on the equivalence of [`glm`]{.yellow} and [`lm`]{.yellow}! You‚Äôve run the analysis three times now: `fantastic_analysis_v3.R`, [`final_FINAL.Rmd`]{.yellow}, and [`FINAL_revised_with_comments_v2.qmd`]{.yellow}.

:::

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}

> During a meeting, the PI asks:  

:::

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}
> _‚ÄúCan you show me what changed between the version we worked on 6 weeks ago and this one you sent me yesterday?‚Äù_

![](https://media.tenor.com/Vi4nIBggYBMAAAAM/spongebob-exams.gif)
:::

---

:::{.columns}
:::{.column width=40%}

![](https://imgs.xkcd.com/comics/documents_2x.png)

:::


:::{.column width=60%}
![](http://www.phdcomics.com/comics/archive/phd101212s.gif)
:::
:::

---

## Version Control with Git & GitHub <i class="nes-icon github is-medium"></i>

Why Git?

- Track every change you make
- Recover and understand past versions
- Collaborate without fear

:::{.fragment}
![](https://geo-python-site.readthedocs.io/en/2022.0/_images/play-changes.PNG)
:::

---

## Version Control with Git & GitHub <i class="nes-icon github is-medium"></i>

0. Set up your GitHub Account with secure PATs (Personal Access Token = Special Password üòâ) with `usethis::create_github_token()`
1. Initialize a git repository for your project with `usethis::use_git()`
2. Track some changes
3. "Push" the changes to GitHub for backup and sharing with `usethis::use_github()`
4. Open GitHub to see your code reflected!

:::aside
By far, the best resource for Git for R users is [HappyGitWithR.com](https://happygitwithr.com/hello-git) [^https://happygitwithr.com/hello-git]
:::

---

## Workflow Benefit #4: Traceability with Version Control ^[https://journals.lww.com/epidem/citation/2025/05000/advancing_reproducible_research_through_version.8.aspx] ^[https://link.springer.com/article/10.1186/1751-0473-8-7]<i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-empty is-small"></i> {.smaller background-image="https://www.gtplanet.net/forum/media/gif-the-first-verse-of-the-fun-song.31408/full" background-position="98% 2%" background-size="15%"}

-	No more [file clutter]{.dark-red}: Replace `final_v3_revised_REAL_FINAL.Rmd` with clean version tracking

-	Precise [change history]{.green}: Git tracks edits line by line ‚Äî you know what changed, when, and why.

-	[Intentional work]{.green}: Use git as a [daily lab notebook]{.blue} where commits encourage reflection (what did I do today, and why?)

-	Safe [collaboration]{.green}: Work in parallel without overwriting each other‚Äôs code using branches and pull requests. [Experimentation is encouraged]{.blue}

-	Work with the garage door up: Share your process early, even if it‚Äôs not polished. GitHub lets collaborators see your progress and offer [feedback or help sooner]{.blue}

---

## {background-image="https://i.ytimg.com/vi/1PR-TaL6sGg/maxresdefault.jpg"}

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}

> You've spent all of this time working on reproducibility, but your collaborators
simply do not care for it...

:::

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}

> "This is so much overkill for a small analysis"

:::

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}

> "I'm not a computer scientist I really don't care about any of this! I don't want to
learn a new package"

:::

::: {.fragment style="background: rgba(0, 0, 0, 0.7)"}

> Doing all of this is so slow! I can just use Excel, my old workflow has worked
fine so far

:::

---

## I get it; it's a lot üò∞ {.smaller}

:::{.columns}

:::{.column width=35%}
![The reproducibility iceberg](https://raps-with-r.dev/images/repro_iceberg.png) ^[https://www.nature.com/articles/s41597-025-04451-9]

:::

:::{.column width=65%}
- It's a [learning process/investment]{.blue} with benefits accruing over time
- Adopting these principles gradually is fine ‚Äî [start small, but start now.]{.blue}
- These principles aren‚Äôt about using [fancy tools]{.dark-red} ‚Äî they‚Äôre about creating [systems]{.green} that are beneficial to your future self and your collaborators.
- Labs that adopt reproducible workflows produce [cleaner, more sustainable+trustworthy science.]{.green}


:::

:::

---

## {background-image="./figs/excel_error2.png" background-size="40%" background-position="70% 10%"}

Labs that don't...^[https://www.bbc.com/news/magazine-22223190]

---

## Reproducible collaboration requires compromise ü§ù

::: {.fragment}
We want reproducibility.  
They might want convenience.
:::

::: {.fragment}
You [can't force everyone]{.dark-red} to use Git, FASRC, Quarto, etc. all the time
:::

::: {.fragment}
You can compromise ‚Äî and still keep your workflow clean ‚Äî by [finding and implementing creative middle-ground solutions.]{.blue}
:::

::: {.fragment}
For e.g., the **`pins`** package üìå
:::

---

## Accessing Google Drive with `pins`üìå

- Google Drive (and friends) don't neatly fit into the workflow (for reasons we've discussed)

- How do you share data with outside Harvard collaborators?üßê

- How do you couple your data science to other academic workflows?

- [`pins` solves this by providing versioned programmatic access to Google, Box, OneDrive etc.]{.dark-green}

- Treats data objects in R/Python/Javascript as "pins" and online locations as "pinup boards"

---

## Accessing Google Drive with `pins`üìå

1. Create a board in R from the Google Drive
  a) `install.packages("pins")`
  b) `install.packages("googledrive")`
  c) `drive_id <- googledrive::as_id("https://drive.google.com/drive/folders/1MYoaffvU9ogu7nFo3Whz7XYVG1fq4wHY?usp=share_link")`
  d) `board <- board_gdrive(drive_id, versioned=TRUE)`
2. Create and write a pin for your `glm()` results
  a) `pin_write(board, salary_glm_model, name="glm results", "Showing that the glm results are identical to the lm results")`

---

## Workflow Benefit #5: Flexibility with `pins` and Google Drive<i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i>

- `pins` gives you:
  - üöÄ Benefits of programmatic [data science in R or Python]{.dark-green}
  - ü§ù [Collaboration]{.dark-green} of Google Drive
  - ü™¢ [Coupling]{.dark-green} between your data science and the rest of your academic responsibilities

- Your laptop is your [personal desk]{.blue} ‚å®Ô∏è
- FASRC is your [wet lab bench]{.blue} üî¨üß™
- GitHub is your collection of [open, organically-growing, precise, lab notebooks]{.blue} üìö
- Google Drive is your [PII-safe vault]{.blue} for data üóÑ or [bulletin board]{.blue} for outputs üìå

---

# <i class="nes-icon like is-medium"></i>[Use the tool that works best for the **file type** & **data restrictions**]{.yellow}<i class="nes-icon like is-medium"></i>

---

## What Belongs Where? {.smaller}

| Type of Data | Go To |
|--------------|-------|
| üîê Raw data from collaborators | **Google Drive** & **FASRC** |
| üíª Analysis code (`.R`, `.Rmd`, `.qmd`, `.py`, plain text files) | **FASRC** & **GitHub** |
| üñºÔ∏è Notebooks, tables, plots, etc. for review (PII-safe) | **GitHub** or **Google Drive** |
| ‚ö†Ô∏è Any form of sensitive intermediate outputs or code | **Google Drive** |
| üßº Cleaned/shareable datasets | **FASRC** always; **Google Drive** if PII; **Dataverse** if anonymized |

---

## Recap: Your Sustainable Stack {.smaller}

| Principle          | Tool                                  | What We Learned                              |
|--------------------|----------------------------------------|------------------------------------------------|
| **Efficiency**      | FASRC                                 | Remote computing     |
| **Transparency**    | Notebooks       | Narrated and reproducible scientific analysis   |
| **Modularity**      | `here()` + `renv`                     | Robust file paths & environment isolation   |
| **Traceability**    | Git + GitHub                          | Version control and team collaboration    |
| **Flexibility**      | `googledrive` + `pins`                | Reproducible I/O with shared cloud data     |

![](https://libapps.s3.amazonaws.com/accounts/310452/images/FAIR_data_principles.jpg)

:::{.fragment .fade-in style="text-align: center;"}

Congratulations! You've earned all 5 stars

<i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i> <i class="nes-icon star is-medium"></i>
:::


---

## Thanks! Let's discuss... {background-image="https://media1.giphy.com/media/12XDYvMJNcmLgQ/giphy.gif" background-size="35%" background-position="40% 80%"}

- Let‚Äôs build workflows that work for robust science ‚Äî and for you.
- My goal is to enable _you_ to do your best work!

