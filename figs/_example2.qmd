---
title: "My fantastic analysis"
format: html
date: now
author: "Squidward P. Tentacles"
---

In this analysis I'm going to use the `mtcars` dataset to
demonstrate regression and prediction.

## Libraries

Here are the necessary libraries you'll need to replicate this...

```{r}
library(ggplot2)
```

## Fitting the model

I chose to use the `wt` an `hp` variables as predictors because blah blah blah...

```{r}
model <- lm(mpg ~ wt + hp, data = mtcars)
```

## Predict on New Data

I'm creating some new data to predict on...

```{r}
new_data <- data.frame(wt = c(2.5, 3.0, 3.5), hp = c(100, 150, 200))
predictions <- predict(model, newdata = new_data)
```

And plotting it with ggplot:
```{r}
plot <- ggplot(new_data, aes(x = wt, y = hp)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  geom_text(aes(label = round(predictions, 2)), vjust = -1, color = "red") +
  labs(title = "Predicted MPG based on Weight and Horsepower",
       x = "Weight (1000 lbs)",
       y = "Horsepower")
plot
```

## Equivalence of Gaussian GLM and LM 

Next we'll prove that regression the `glm` function is statistically equivalent to the `lm` function with a Gaussian distribution. Heres an example with the `salaries` dataset

```{r}
#setwd("/n/holylabs/home/ttapera")
dir.create("Downloads", showWarnings = FALSE)

# Download the iris dataset from GitHub and save it into Downloads/
url <- "https://grodri.github.io/datasets/salary.dat"
download.file(url, destfile = "Downloads/salary.dat", mode = "wb")
```

```{r}
salary_data <- read.table("Downloads/salary.dat", header=TRUE, stringsAsFactors = TRUE)

salary_lm_model <- lm(sl ~ dg + rk + sx + yr, data = salary_data)
salary_glm_model <- glm(sl ~ dg + rk + sx + yr, data = salary_data, family="gaussian")
summary(salary_lm_model)
```

This is equivalent to the GLM results:

```{r}
summary(salary_glm_model)
```


## Conclusion

In this notebook I ran an experiment and documented it so that next time
I or someone else sees it they can know exactly what I did
and why 😁
